{"version":3,"sources":["components/TodoItem.js","constants/filterTypes.js","redux/todoSlice.js","hooks/useTodo.js","App.js","redux/stores.js","index.js"],"names":["TodoItemWrapper","styled","div","props","theme","colors","primary_4","TodoContent","primary_5","$isDone","TodoButtonWrapper","TodoButton","button","DangerButton","todoItem","todo","deleteTodo","toggleTodo","data-id","id","isDone","content","onClick","COMPLETED","UNCOMPLETED","todoData","JSON","parse","window","localStorage","getItem","todoSlice","createSlice","name","initialState","todos","filter","reducers","getTodosState","state","_","undefined","addTodoState","action","length","payload","deleteTodoState","clearTodosState","toggleTodoState","map","setFilterState","selectTodos","selectFilter","actions","useTodo","useState","inputValue","setInputValue","useSelector","dispatch","useDispatch","useEffect","setItem","stringify","writeTodosToLocalStorage","showedTodos","handleInputChange","e","target","value","addTodo","trim","key","showAll","showCompleted","showUncompleted","clearAll","Title","h1","Filter","Button","NewTodoInput","input","Container","App","className","style","marginBottom","type","placeholder","onChange","onKeyPress","store","configureStore","reducer","todosReducer","ReactDOM","render","primary_1","primary_2","primary_3","document","getElementById"],"mappings":"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","file":"static/js/main.34f67967.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  margin-top: 20px;\n  word-break: break-word;\n  width: 95%;\n  border-bottom: 0.5px solid ${(props) => props.theme.colors.primary_4};\n  & + & {\n    margin-top: 5px;\n  }\n  & button {\n    opacity: 0;\n  }\n  &:hover button {\n    opacity: 1;\n  }\n`;\n\nconst TodoContent = styled.div`\n  color: ${(props) => props.theme.colors.primary_5};\n  font-size: 22px;\n  word-break: break-word;\n  width: 68%;\n  ${(props) => props.$isDone && `text-decoration: line-through;`}\n`;\n\nconst TodoButtonWrapper = styled.div``;\n\nconst TodoButton = styled.button`\n  margin: 5px 0 0 10px;\n  transition: all 0.1s linear;\n`;\n\nconst DangerButton = styled(TodoButton)`\n  background: #255e69;\n  color: whitesmoke;\n`;\n\nexport default function todoItem({ todo, deleteTodo, toggleTodo }) {\n  const handleDeleteClick = () => deleteTodo(todo.id);\n  const handleCompleteClick = () => toggleTodo(todo.id);\n\n  return (\n    <TodoItemWrapper data-id={todo.id}>\n      <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      <TodoButtonWrapper>\n        <TodoButton onClick={handleCompleteClick}>\n          {todo.isDone ? '未完成' : '已完成'}\n        </TodoButton>\n        <DangerButton onClick={handleDeleteClick}>刪除</DangerButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","export const ALL = 'ALL';\nexport const COMPLETED = 'COMPLETED';\nexport const UNCOMPLETED = 'UNCOMPLETED';","import { createSlice } from '@reduxjs/toolkit';\n\nconst todoData = JSON.parse(window.localStorage.getItem('todos'));\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    todos: [],\n    filter: 'ALL',\n  },\n  reducers: {\n    getTodosState(state, _) {\n      state.todos = todoData && todoData[0] !== undefined ? todoData : [];\n    },\n\n    addTodoState(state, action) {\n      state.todos = [\n        {\n          id: state.todos.length ? state.todos[0].id + 1 : 1,\n          content: action.payload.content,\n          isDone: false,\n        },\n        ...state.todos,\n      ];\n    },\n\n    deleteTodoState(state, action) {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\n    },\n\n    clearTodosState(state, _) {\n      state.todos = [];\n    },\n\n    toggleTodoState(state, action) {\n      state.todos = state.todos.map((todo) => {\n        if (todo.id !== action.payload) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      });\n    },\n\n    setFilterState(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const selectTodos = (state) => state.todos.todos;\nexport const selectFilter = (state) => state.todos.filter;\n\nexport const {\n  addTodoState,\n  deleteTodoState,\n  toggleTodoState,\n  clearTodosState,\n  setFilterState,\n  getTodosState,\n} = todoSlice.actions;\n\nexport default todoSlice.reducer;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ALL, COMPLETED, UNCOMPLETED } from '../constants/filterTypes';\nimport {\n  addTodoState,\n  deleteTodoState,\n  toggleTodoState,\n  clearTodosState,\n  setFilterState,\n  getTodosState,\n  selectTodos,\n  selectFilter,\n} from '../redux/todoSlice';\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nexport default function useTodo() {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => setInputValue(e.target.value);\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => writeTodosToLocalStorage(todos), [todos]);\n  useEffect(() => dispatch(getTodosState()), [dispatch]);\n\n  const addTodo = (e) => {\n    if (inputValue.trim() !== '' && e.key === 'Enter') {\n      dispatch(addTodoState({ content: inputValue }));\n      setInputValue('');\n    }\n  };\n\n  const deleteTodo = (id) => dispatch(deleteTodoState(id));\n\n  const toggleTodo = (id) => dispatch(toggleTodoState(id));\n\n  const showAll = () => dispatch(setFilterState(ALL));\n\n  const showCompleted = () => dispatch(setFilterState(COMPLETED));\n\n  const showUncompleted = () => dispatch(setFilterState(UNCOMPLETED));\n\n  const clearAll = () => dispatch(clearTodosState());\n\n  const showedTodos = todos.filter((todo) => {\n    switch (filter) {\n      case ALL:\n        return todo;\n\n      case COMPLETED:\n        return todo.isDone === true;\n\n      case UNCOMPLETED:\n        return todo.isDone === false;\n\n      default:\n        return todo;\n    }\n  });\n\n  return {\n    inputValue,\n    showedTodos,\n    setInputValue,\n    handleInputChange,\n    addTodo,\n    deleteTodo,\n    toggleTodo,\n    showAll,\n    showCompleted,\n    showUncompleted,\n    clearAll,\n  };\n}\n","import './App.css';\nimport styled from 'styled-components';\nimport TodoItem from './components/TodoItem';\nimport useTodo from './hooks/useTodo';\n\nconst Title = styled.h1``;\n\nconst Filter = styled.div``;\n\nconst Button = styled.button`\n  margin-left: 10px;\n`;\n\nconst DangerButton = styled(Button)`\n  background: #255e69;\n  color: whitesmoke;\n`;\n\nconst NewTodoInput = styled.input`\n  padding: 10px 10px;\n  width: calc(100% - 20px);\n  background-color: #6a959d;\n  color: whitesmoke;\n  font-size: 20px;\n  vertical-align: middle;\n`;\n\nconst Container = styled.div`\n  margin: 40px auto;\n  padding: 30px;\n  max-width: 700px;\n  background-color: #D1E2E5;\n  font-family: 'Josefin Sans', sans-serif;\n}\n`;\n\nfunction App() {\n  const {\n    inputValue,\n    showedTodos,\n    handleInputChange,\n    addTodo,\n    deleteTodo,\n    toggleTodo,\n    showAll,\n    showCompleted,\n    showUncompleted,\n    clearAll,\n  } = useTodo();\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Title>Redux Toolkit Todo List</Title>\n        <Filter style={{ marginBottom: '30px' }}>\n          <Button onClick={showAll}>全部</Button>\n          <Button onClick={showCompleted}>已完成</Button>\n          <Button onClick={showUncompleted}>未完成</Button>\n          <DangerButton onClick={clearAll}>清空</DangerButton>\n        </Filter>\n\n        <NewTodoInput\n          type=\"text\"\n          placeholder=\"Type something and press enter\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyPress={addTodo}\n        />\n\n        {showedTodos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            toggleTodo={toggleTodo}\n          />\n        ))}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import todosReducer from './todoSlice';\nimport { configureStore } from '@reduxjs/toolkit';\n\nconst store = configureStore({ reducer: { todos: todosReducer } });\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport store from './redux/stores';\n\nconst theme = {\n  colors: {\n    primary_1: '#6A959D',\n    primary_2: '#D1E2E5',\n    primary_3: '#9EBEC4',\n    primary_4: '#467B85',\n    primary_5: '#255E69',\n  },\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>    \n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}